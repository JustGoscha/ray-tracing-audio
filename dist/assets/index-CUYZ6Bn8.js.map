{"version":3,"file":"index-CUYZ6Bn8.js","sources":["../../js/util/browser-util.js","../../js/canvas.js","../../js/misc/colors.js","../../js/geometry/Point.js","../../js/player.js","../../js/util/fps.js","../../js/scene.js","../../js/math/vector-math.js","../../js/geometry/Line.js","../../js/geometry/Circle.js","../../js/config.js","../../js/geometry/Ray.js","../../js/intersections.js","../../js/webaudio/webaudio.js","../../js/webaudio/master.js","../../js/webaudio/endpoints.js","../../js/webaudio/sound-util.js","../../js/webaudio/test-sound.js","../../js/frame.js","../../js/shoot-rays.js","../../js/interaction.js","../../js/animation.js","../../js/main.js"],"sourcesContent":["// ----- HELPER FUNCTIONS -----\n\nfunction $(expr, container) {\n  return typeof expr === \"string\"? (container || document).querySelector(expr) : expr || null;\n}\n\n// Returns all elements that match CSS selector {expr} as an array.\n// Querying can optionally be restricted to {container}’s descendants\nfunction $$(expr, container) {\n  return [].slice.call((container || document).querySelectorAll(expr));\n}\n\nfunction viewport(){\n    var e = window;\n    var a = 'inner';\n    if (!('innerWidth' in window)){\n        a = 'client';\n        e = document.documentElement || document.body;\n    }\n    return { width : e[ a+'Width' ] , height : e[ a+'Height' ] };\n}\n\nvar getMousePositionFromEvent = function(event){\n  var currentX, currentY;\n  if(event.offsetX!==undefined){\n    currentX = event.offsetX;\n    currentY = event.offsetY;\n  } else {\n    currentX = event.layerX - event.currentTarget.offsetLeft;\n    currentY = event.layerY - event.currentTarget.offsetTop;\n  }\n\n  return {x: currentX, y: currentY};\n};\n\nexport {$, $$, viewport, getMousePositionFromEvent};","import {$, viewport} from './util/browser-util'\n\nvar initCanvas = function(){\n  var canvas = $('canvas');\n  setCanvasSize(canvas);\n  var ctx = canvas.getContext('2d');\n  return [canvas, ctx];\n};\n\nvar setCanvasSize = function(canvas){\n  var size = viewport();\n\n  canvas.style.width = `${size.width}px`;\n  canvas.width = size.width;\n  canvas.height = size.height-5;\n  canvas.style.height = `${size.height-5}px`;\n  canvas.style.top = canvas.style.bottom = canvas.style.right = canvas.style.left = 0;\n};\n\nfunction clearCanvas(){\n  canvas.width = canvas.width;\n}\n\nvar [canvas, ctx] = initCanvas();\n\nexport {canvas, ctx, clearCanvas};","var colors = {\n  line: \"#514248\",\n  unfinished : \"#dbb4ad\",\n  ray: \"#ebb4a2\",\n  secondary: \"#efe2d4\",\n  red: \"#a02e61\",\n  lightRed: \"hsla(337, 20%, 40%, 0.5)\",\n  light: \"#ffe3dc\",\n  slight: \"#99ad7c\",\n  circle: \"#53ab6d\",\n};\n\n\nexport default colors\n","function Point(x,y){\n  this.x = x;\n  this.y = y;\n}\n\nPoint.prototype.set = function(x,y){\n  this.x = x;\n  this.y = y;\n}\n\nPoint.prototype.scale = function(a) {\n  this.x = this.x * a\n  this.y = this.y * a\n}\n\nPoint.prototype.add = function(p) {\n  this.x += p.x\n  this.y += p.y\n}\n\nexport default Point;","import {viewport} from './util/browser-util'\nimport {ctx} from './canvas'\nimport colors from './misc/colors'\nimport Point from './geometry/Point'\n\nclass Player{\n  constructor (x,y) {\n    this.position = new Point(x,y)\n  }\n\n  get x() { return this.position.x }\n  get y() { return this.position.y }\n\n  draw(){\n    ctx.fillStyle = colors.slight;\n    ctx.fillRect(this.x-5, this.y-5, 10, 10);\n  }\n\n  set(x,y){\n    this.position.set(x,y)\n  }\n}\n\nconst initPlayer = function(){\n  var {width, height} = viewport()\n  return new Player(width/2, height/2)\n}\nconst player = initPlayer()\n\nexport default player","import {ctx} from '../canvas'\nimport colors from '../misc/colors'\n\nvar fps = {\n  startTime : 0,\n  frameNumber : 0,\n  getFPS : function(){\n    this.frameNumber++;\n    var d = performance.now(),\n      currentTime = ( d - this.startTime ) / 1000,\n      result = Math.floor( ( this.frameNumber / currentTime ) );\n\n    if( currentTime > 1 ){\n      this.startTime = performance.now();\n      this.frameNumber = 0;\n    }\n    return result;\n  },\n  drawFPS: function(){\n    var fps = this.getFPS();\n    ctx.font = \"20px sans-serif\";\n    ctx.fillStyle = colors.slight;\n    ctx.fillText(`${fps}fps`, 5, 20);\n  }\n};\n\nexport default fps;","import {canvas, ctx} from './canvas'\nimport player from './player'\nimport colors from './misc/colors'\n\nvar Scene = {\n  // objects in the scene\n  primaryRays: [],\n  circles: [],\n  finishedLines: [],\n  \n  _distances: [],\n  intersections: [],\n  hiddenIntersections: [],\n  lineBeingDrawn: null,\n  circleBeingDrawn: null, \n  \n  player: player,\n  canvas: canvas,\n  ctx: ctx\n}\n\nScene.render = function(){\n  drawRays();\n  drawFinishedLines();\n  drawHiddenIntersections();\n  drawIntersections();\n  drawLineBeingDrawn();\n  if (Scene.circleBeingDrawn) Scene.circleBeingDrawn.draw(this.ctx) \n  this.circles.forEach(circle => circle.draw(this.ctx))\n  this.player.draw();\n}\n\nfunction drawLineBeingDrawn(){\n  if(Scene.lineBeingDrawn) Scene.lineBeingDrawn.draw(ctx);\n};\n\nfunction drawFinishedLines(){\n  for(var line of Scene.finishedLines){\n    line.draw(ctx);\n  }\n};\n\nfunction drawRays(){\n  for(var ray of Scene.primaryRays){\n    ray.draw(ctx);\n  }\n};\n\nfunction drawIntersections(){\n  ctx.fillStyle = colors.red;\n  for(var point of Scene.intersections){\n    ctx.fillRect(point.x-5, point.y-5, 10, 10);\n  }\n}; \n\nfunction drawHiddenIntersections(){\n  ctx.fillStyle = colors.lightRed;\n  for(var point of Scene.hiddenIntersections){\n    ctx.fillRect(point.x-5, point.y-5, 10, 10);\n  }\n}; \n\n\nexport default Scene;","const near = function(p1,p2,dist){\n  if((Math.abs(p1.x-p2.x)<=dist) && (Math.abs(p1.y-p2.y)<=dist)) return true;\n  else return false;\n};\n\nconst dotProduct = function(a, b){\n  return a.x * b.x + a.y * b.y;\n}\n\nconst PI2 = Math.PI * 2\nfunction vectorToAngle(p) {\n  if (p.angle) return p.angle\n  const asin = Math.asin(p.y)\n  if (p.x < 0) {\n    return Math.PI - asin\n  } else {\n    return asin < 0 ? PI2 + asin : asin\n  }\n}\n\nfunction normalize(v) {\n  const x = Math.sqrt(v.x*v.x + v.y*v.y)\n  return {\n    x: v.x/x,\n    y: v.y/x\n  }\n}\n\nfunction distanceBetween(p1, p2){\n  var a,b,dist = 0;\n  a = p1.x-p2.x;\n  b = p1.y-p2.y;\n  dist = Math.sqrt(a*a+b*b);\n  return dist;\n}\n\n/**\n * The  angle between two vectors if they would start\n * at the same point, from v1 counter-clockwise to v2\n * @param  {Point} v1 [description]\n * @param  {Point} v2 [description]\n * @return {number}    angle in radians\n */\nfunction angleBetween(v1, v2) {\n  return ((vectorToAngle(v2) - vectorToAngle(v1)) + PI2)%PI2\n}\n\n/**\n * Reflects a vector off another vector\n * @param  {Point} v1 [description]\n * @param  {Point} v2 [description]\n * @return {Point}    reflected vector\n */\nfunction reflectionVector(v1, v2) {\n  const angle1 = vectorToAngle(v1)\n  const angle2 = vectorToAngle(v2) % Math.PI\n\n  const reflectedAngle = (angle2 + (angle2 - angle1) + PI2) % PI2\n  // const reflectedAngle = angle1 < angle2 ? \n  //   ((PI2 + angle2 - angle1)*2) % PI2 : \n  //   ((PI2 + angle1 - angle2)*2) % PI2\n  return {\n    x: Math.cos(reflectedAngle),\n    y: Math.sin(reflectedAngle),\n    angle: reflectedAngle\n  }\n}\n\n/**\n * Reflects a vector off a circle\n * @param  {Point} v1 Vector to reflect\n * @param  {Circle} circle Circle to reflect off of\n * @param  {Point} intersectionPoint Point where the vector hits the circle\n * @return {Point} reflected vector\n */\nfunction reflectOffCircle(v1, circle, intersectionPoint) {\n  // Calculate the normal vector (from center to intersection point)\n  const normal = {\n    x: intersectionPoint.x - circle.center.x,\n    y: intersectionPoint.y - circle.center.y\n  }\n  // Normalize the normal vector\n  const normalLength = Math.sqrt(normal.x * normal.x + normal.y * normal.y)\n  normal.x /= normalLength\n  normal.y /= normalLength\n  \n  // Use the reflection formula: R = V - 2(V·N)N\n  const dot = 2 * (v1.x * normal.x + v1.y * normal.y)\n  return {\n    x: v1.x - dot * normal.x,\n    y: v1.y - dot * normal.y\n  }\n}\n\nfunction randomVectorGen(num) {\n  num = num!==undefined ? num : Math.PI * 2 * Math.random()\n  return {\n    x: Math.cos(num),\n    y: Math.sin(num),\n    angle: num\n  }\n}\n\nconst subtract = function(a,b){\n  return {x: a.x - b.x, y: a.y - b.y};\n}\n\nexport {\n  near,\n  subtract,\n  dotProduct,\n  vectorToAngle,\n  reflectionVector,\n  reflectOffCircle,\n  normalize,\n  distanceBetween,\n  angleBetween,\n}\n\n","import Point from './Point'\nimport {ctx} from '../canvas'\nimport colors from '../misc/colors'\n\nfunction Line(x,y,x1,y1, color = \"#444\"){\n  this.x = x;\n  this.y = y;\n  this.x1 = x1;\n  this.y1 = y1;\n\n  this.vector = new Point(x1 - x, y1 - y);\n\n  this.color = color;\n  this.width = 2;\n}\n\nLine.prototype.draw = function() {\n  // draw on canvas\n  // line from\n  ctx.beginPath();\n  ctx.moveTo(this.x, this.y);\n  // to\n  ctx.lineTo(this.x1,this.y1);\n  // color\n  ctx.strokeStyle = this.color;\n  ctx.lineWidth = this.width;\n  // draw it\n  ctx.stroke();\n  ctx.closePath();\n};\n\nLine.prototype.setEnd = function(x,y){\n  this.x1 = x;\n  this.y1 = y;\n  this.vector.set(x - this.x, y-this.y);\n}\n\nLine.prototype.setStart = function(x,y){\n  this.x = x;\n  this.y = y;\n  this.vector.set(this.x - x1, this.y - y1);\n}\n\nexport default Line;\n","import colors from '../misc/colors'\n\nclass Circle {\n  constructor(center, radius) {\n    this.center = center\n    this.radius = radius\n  }\n\n  draw(ctx, color) {\n    ctx.beginPath()\n    const {x,y} = this.center\n    ctx.lineWidth = 2\n    ctx.arc(x,y,this.radius,0,2*Math.PI)\n    ctx.strokeStyle = this.color || colors.circle\n    ctx.stroke()\n    ctx.closePath()\n  }\n}\n\nexport default Circle\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const numberOfRays = 180;\n// 1m = 10px -> ratio = 10\nconst pixelMeterRatio = 10;\nconst maxChildren = 8\n\nconst rayAngle = 2*Math.PI/numberOfRays;\n\nvar rayAngles = new Array(numberOfRays);\nfor(var i = 0; i<numberOfRays; i++){\n  rayAngles[i] = rayAngle*i;\n  console.log(rayAngles[i])\n}\n\nexport {numberOfRays, rayAngle, rayAngles, pixelMeterRatio, maxChildren};","import Point from './Point'\nimport Line from './Line'\nimport Circle from './Circle'\nimport {canvas} from '../canvas'\nimport {reflectionVector, normalize, reflectOffCircle} from '../math/vector-math'\nimport colors from '../misc/colors'\nimport * as config from '../config'\n\n\n/**\n * [Ray description]\n * @param {Point} start    [description]\n * @param {Point} vector        [description]\n * @param {number} maxChildren  maximum number of reflected rays from it\n * @param {Line} touchedGeometry    The line from which it starts\n *                              if it is a reflected Ray\n */\nclass Ray{\n  constructor(start,vector, maxChildren = config.maxChildren, touchedGeometry){\n    this.maxChildren = maxChildren\n    this.end = new Point(vector.x, vector.y)\n    this.reset(start, vector, undefined, touchedGeometry)\n  }\n\n  get x() { return this.start.x }\n  get y() { return this.start.y }\n  get x1() { return this.end.x }\n  get y1() { return this.end.y }\n\n  reset(start,vector,length = 10000, touchedGeometry) {\n    this.start = start\n\n    this.end.set(vector.x,vector.y)\n    this.end.scale(length)\n    this.end.add(start)\n    \n    this.vector = vector\n    this.touchedGeometry = touchedGeometry\n  }\n\n  reflect(geometry, intersectionPoint) {\n    if (this.maxChildren === 0) { return }\n\n    let reflectedVector = null\n    if (geometry instanceof Line) {\n      reflectedVector = this.reflectLine(geometry, intersectionPoint)\n    } else if (geometry instanceof Circle) {\n      reflectedVector = this.reflectCircle(geometry, intersectionPoint)\n    } else {\n      throw new Error('Unknown geometry type')\n    }\n\n    if (this.maxChildren > 0) {\n      if(this.child) {\n        this.child.reset(intersectionPoint, reflectedVector, undefined, geometry)\n      } else {\n        this.child = new Ray(intersectionPoint, reflectedVector, this.maxChildren-1, geometry)\n      }\n    }\n  }\n\n  /**\n   * Reflects a ray off a circle\n   * @param {Circle} circle\n   * @param {Point} intersectionPoint\n   * @returns {Point} The reflected vector\n   */\n  reflectCircle(circle, intersectionPoint) {\n    const reflectedVector = reflectOffCircle(this.vector, circle, intersectionPoint)\n    this.reset(this.start, this.vector, intersectionPoint.rayPosition)\n    return reflectedVector\n  }\n  \n  reflectLine(line, intersectionPoint) {\n    const reflectedVector = reflectionVector(this.vector, normalize(line.vector))\n    this.reset(this.start, this.vector, intersectionPoint.rayPosition)\n    return reflectedVector\n  }\n\n  draw(ctx, color = colors.ray) {\n    ctx.beginPath()\n    ctx.moveTo(this.x, this.y)\n    // to\n    ctx.lineTo(this.x1,this.y1)\n    // color\n    ctx.strokeStyle = `rgba(${200 - 30*this.maxChildren},20,30,${0.15*this.maxChildren})`\n    ctx.lineWidth = 1\n    // draw it\n    ctx.stroke()\n    ctx.closePath()\n    if (this.child) {\n      this.child.draw(ctx, color)\n    }\n  }\n\n  updatePosition(p){\n    this.reset(p, this.vector)\n  }\n}\n\nexport default Ray;","import Scene from './scene'\nimport {\n  dotProduct, \n  subtract, \n  reflectionVector, \n  normalize, \n  distanceBetween,\n} from './math/vector-math'\nimport Ray from './geometry/Ray'\nimport Circle from './geometry/Circle';\nimport Line from './geometry/Line';\n\n/**\n * [rayLineIntersection description]\n * @param  {[type]} ray  [description]\n * @param  {[type]} line [description]\n * @return {Point}      returns point or null\n */\nvar intersectionsChecked=0;\nsetInterval(function(){\n  console.log(\"Intersections checked: \" + intersectionsChecked );\n}, 3000);\n\nfunction rayLineIntersection(ray, line){\n  intersectionsChecked++;\n  var e = ray.vector;\n  var f = line.vector;\n  var p = {x: -e.y, y: e.x};\n  var q = {x: -f.y, y: f.x};\n  var h = (dotProduct(subtract(ray, line), p))/dotProduct(f,p);\n  var i = (dotProduct(subtract (line, ray), q))/dotProduct(e,q);\n  if(i>0 && h>0 && h<1){\n    return {\n      rayPosition: i,\n      x: ray.x + i*ray.vector.x, \n      y: ray.y + i*ray.vector.y\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction rayCircleIntersection(ray, circle) {\n  // Vector from circle center to ray start\n  const centerToRay = {\n    x: ray.start.x - circle.center.x,\n    y: ray.start.y - circle.center.y\n  };\n\n  // Quadratic equation coefficients\n  // at² + bt + c = 0\n  const a = dotProduct(ray.vector, ray.vector);\n  const b = 2 * dotProduct(ray.vector, centerToRay);\n  const c = dotProduct(centerToRay, centerToRay) - (circle.radius * circle.radius);\n\n  // Calculate discriminant\n  const discriminant = b * b - 4 * a * c;\n\n  // No intersection if discriminant is negative\n  if (discriminant < 0) {\n    return null;\n  }\n\n  // Calculate intersection points\n  const t1 = (-b - Math.sqrt(discriminant)) / (2 * a);\n  const t2 = (-b + Math.sqrt(discriminant)) / (2 * a);\n\n  // We only want intersections in the positive direction of the ray\n  let t = t1;\n  if (t < 0) {\n    t = t2;\n    if (t < 0) {\n      return null;  // Both intersections behind the ray\n    }\n  }\n\n  // Return the intersection point\n  return {\n    rayPosition: t,\n    x: ray.start.x + t * ray.vector.x,\n    y: ray.start.y + t * ray.vector.y\n  };\n}\n\nfunction reflectRayFromLine(ray, line, intersectionPoint) {\n  const reflectedVector = reflectionVector(ray.vector, normalize(line.vector))\n  return new Ray(intersectionPoint, reflectedVector)\n}\n\nfunction reflectRayFromCircle(ray, circle, intersectionPoint) {\n  const reflectedVector = reflectionVector(ray.vector, normalize(circle.center.subtract(intersectionPoint)))\n  return new Ray(intersectionPoint, reflectedVector)\n}\n\nfunction aabbIntersect(box, ray){\n  var s,t = 0;\n  s = (ray.x - box.x)/ray.vector.x;\n  if(s<0) return false;\n  t = s*ray.vector.y + ray.y;\n  if (t>box.y2 || t<box.y) return false;\n  // the same procedure for each side\n  s = (ray.x - box.x2)/ray.vector.x;\n  if(s<0) return false;\n  t = s*ray.vector.y + ray.y;\n  if (t>box.y2 || t<box.y) return false;\n\n  s = (ray.y - box.y)/ray.vector.y;\n  if(s<0) return false;\n  t = s*ray.vector.x + ray.x;\n  if (t>box.x2 || t<box.x) return false;\n\n  s = (ray.y - box.y2)/ray.vector.y;\n  if(s<0) return false;\n  t = s*ray.vector.x + ray.x;\n  if (t>box.x2 || t<box.x) return false;\n}\n\nfunction roughDistance(p1,p2){\n  var a,b,dist = 0;\n  a = p1.x-p2.x;\n  b = p1.y-p2.y;\n  dist = a*a+b*b;\n  return dist;\n}\n\n\n\n/**\n * Creates a reducer function that finds the nearest intersection point between a ray and scene lines\n * \n * @param {Ray} ray - The ray to check intersections for\n * @returns {Function} A reducer function that takes the current state and a line to check\n * @returns {Object} The reducer returns an object containing:\n *   - shortestDistance: Distance to nearest intersection\n *   - nearestIntersect: Nearest intersection point found\n *   - nearestIntersectGeometry: Geometry that created the nearest intersection\n */\nconst rayIntersectReducer = (ray) => (\n  ({shortestDistance, nearestIntersect, nearestIntersectGeometry}, intersectable) => {\n    if (ray.touchedGeometry === intersectable) {\n      return {shortestDistance, nearestIntersect, nearestIntersectGeometry}\n    } \n    let intersectPoint = null;\n    if (intersectable instanceof Circle) {\n      intersectPoint = rayCircleIntersection(ray, intersectable)\n    } else if (intersectable instanceof Line) {\n      intersectPoint = rayLineIntersection(ray, intersectable)\n    } else {\n      console.error('Unknown intersectable type')\n      return { shortestDistance, nearestIntersect, nearestIntersectGeometry }\n    }\n\n    if (intersectPoint) {\n      const distance = roughDistance(intersectPoint, ray)\n      if(distance < shortestDistance){\n        nearestIntersect = intersectPoint\n        nearestIntersectGeometry = intersectable\n        shortestDistance = distance\n      } \n      Scene.hiddenIntersections.push(intersectPoint)\n    }\n    \n    return {shortestDistance, nearestIntersect, nearestIntersectGeometry}\n  }\n)\n\nfunction rayMapper(ray) {\n\n  let rayMeta = [...Scene.finishedLines, ...Scene.circles].reduce(\n    rayIntersectReducer(ray), \n    {\n      shortestDistance: Infinity, \n      nearestIntersect: null, \n      nearestIntersectGeometry: null\n    }\n  )\n\n\n  if (rayMeta.nearestIntersect) {\n    ray.reflect(rayMeta.nearestIntersectGeometry, rayMeta.nearestIntersect)\n    if (ray.child && ray.maxChildren > 0) {\n      // some dangerous recursive shit...\n      forEachMappedRay(rayMapper(ray.child))\n    }\n  }\n  return { ray, \n    shortestDistance: rayMeta.shortestDistance,\n    nearestIntersect: rayMeta.nearestIntersect,\n    nearestIntersectLine: rayMeta.nearestIntersectLine\n  }\n}\n\nconst forEachMappedRay =({ray, shortestDistance, nearestIntersect, nearestIntersectLine}) => {\n  if (nearestIntersect) {\n    Scene.intersections.push(nearestIntersect)\n    Scene._distances.push(distanceBetween(nearestIntersect, ray));\n  } else {\n    Scene._distances.push(10000)\n    ray.child = undefined\n  }\n}\n\nfunction checkSceneIntersections(){\n  intersectionsChecked = 0;\n  Scene.intersections = []; // the nearest intersection\n  Scene.hiddenIntersections = []; // all other intersections\n  Scene._distances = [];\n\n  Scene.primaryRays.map(rayMapper)\n  .forEach(forEachMappedRay)\n}\n\nexport {checkSceneIntersections};","var AudioContext = window.AudioContext || window.webkitAudioContext || window.MozAudioContext || window.mozAudioContext;\n\nif(!AudioContext){\n  window.alert('Your browser does not support the WebAudio API or is not compatible with this implementation.');\n}\n\nvar audioCtx = new AudioContext();\n\nexport {audioCtx};","import {audioCtx} from './webaudio'\n\nvar compressor = audioCtx.createDynamicsCompressor();\nvar masterChannel = audioCtx.createGain();\n\nmasterChannel.connect(compressor);\ncompressor.connect(audioCtx.destination);\n\nexport {masterChannel}","import {audioCtx} from './webaudio'\nimport {masterChannel} from './master'\nimport {numberOfRays, rayAngle, rayAngles, maxChildren} from '../config.js'\n\n// \n// Create panners for each direction a sound should play from\n// ... e.g. number of panners = numer of directions\n// \n\n// listener position (in webaudio context) never changes\n// even if the player is moving around only thing that changes is the orientation\n\n\nfunction createPanner(angle){\n  var panner = audioCtx.createPanner();\n  var x = Math.cos(angle);\n  var y = -Math.sin(angle); // convert right hand cartesion coordinate system to canvas system (invert y)\n  panner.panningModel = \"HRTF\";\n  panner.distanceModel = \"linear\";\n  panner.refDistance = 1;\n  panner.setPosition(x,0,y);\n  panner.connect(masterChannel);\n  return panner;\n}\n\n/**\n * The panners are the starting points of all the rays that are shot from the player.\n * The sounds are played from them, so they are the virtual speakers.\n * @type {Array}\n */\nvar panners = new Array(numberOfRays);\nfunction createPanners(){\n  for(var i = 0; i<panners.length; i++){\n    panners[i] = createPanner(rayAngles[i]);\n  }\n}\n\ncreatePanners();\n\n/**\n * ... a sound ray is a primary ray that\n * starts at the head of the player\n * and represents also all it's children\n * and reflected rays\n */\nclass SoundRay {\n  constructor(ray, angle) {\n    this.ray = ray\n    this.angle = angle \n    this.panner = createPanner(angle)\n  }\n\n  draw() {\n    this.ray.draw()\n  }\n}\n\nexport {panners}","import {audioCtx} from './webaudio'\n\n\nvar createNodeFromBuffer = function(buffer){\n  var bfSource = audioCtx.createBufferSource();\n  bfSource.buffer = buffer;\n  return bfSource;\n};\n\nvar applyAmplitude = function(buffer, amp){\n  var data = buffer.getChannelData(0);\n  for(var i = 0; i<buffer.length; i++){\n    data[i] = data[i]*amp; // checkout copy from channel and stuff...\n  }\n};\n\nvar createNoise = function(amp = 1, length = 80000){\n  var bf = audioCtx.createBuffer(1, length, audioCtx.sampleRate);\n  var data = bf.getChannelData(0);\n\n  for(var i=0;i<length;i++){\n    data[i] = Math.random() * amp;\n  }\n\n  // bfSource.buffer = bf;\n  return bf;\n};\n\nvar createSine = function(f = 440,amp = 1, length = audioCtx.sampleRate){\n  var bf = audioCtx.createBuffer(1, length, audioCtx.sampleRate);\n  var data = bf.getChannelData(0);\n\n  for(var i=0;i<length;i++){\n    data[i] = Math.sin(i * 2*Math.PI * (f/audioCtx.sampleRate)) * amp;\n  }\n  // bfSource.buffer = bf;\n  return bf;\n};\n\nexport {createSine, createNoise, createNodeFromBuffer}","import {audioCtx} from './webaudio'\nimport {masterChannel} from './master'\nimport {panners} from './endpoints'\nimport Scene from './../scene'\nimport * as SoundUtils from './sound-util'\nimport player from '../player'\n\n\nvar noise = SoundUtils.createNoise(0.3);\nvar s440 = SoundUtils.createSine(440, 0.5);\nvar s560 = SoundUtils.createSine(560, 0.4);\n\nvar playing = false;\n\nfunction playSound(){\n  if(playing){\n\n  } else {\n    startBuffer(noise, 0);\n    playing=true;\n  }\n}\n\nvar sounds = new Array(panners.length);\nvar sixteeth = audioCtx.sampleRate/60;\nvar noise = SoundUtils.createNoise(.4);\n\nfunction playAllSounds(){\n  for(var i = 0; i< Scene._distances.length; i++){\n    var d = Scene._distances[i];\n    if(d>400){\n      sounds[i] = SoundUtils.createNoise(1000/(d*d));\n    } else {\n      sounds[i] = SoundUtils.createSine(10000/d, d/300);\n    }\n  }\n\n  for(var i = 0; i<sounds.length; i++){\n    startBuffer(sounds[i], i);\n  }\n}\n\nfunction soundFromDistance(d){\n  // if(d>500){\n  //   return SoundUtils.createNoise(1000/(d*d), length);\n  // } else {\n    var freq = 20000/d;\n    var length = audioCtx.sampleRate/freq;\n    return SoundUtils.createSine(freq, d/500, length);\n  // }\n}\n\nvar soundsPlaying = false;\n\n\nvar lastPosition = {x: 0, y: 0};\nvar oscillators = new Array(panners.length);\nvar gains = new Array(panners.length);\n\nfor(var i = 0; i<gains.length; i++){\n  gains[i] = audioCtx.createGain();\n  gains[i].connect(masterChannel);\n}\n\nfunction toggleContinuous(){\n  soundsPlaying = !soundsPlaying;\n  if(soundsPlaying){\n    for(var i = 0; i<gains.length; i++){\n      oscillators[i] = audioCtx.createOscillator();\n      oscillators[i].connect(gains[i]);\n      oscillators[i].start();\n    }\n  } else {\n    for(var osc of oscillators){\n      osc.stop();\n    }\n  }\n}\n\nfunction updatePlay(){\n  if (soundsPlaying){\n    if(lastPosition.x != player.x && lastPosition.y != player.y){\n      lastPosition = {x: player.x, y: player.y};\n      for(var i = 0; i< Scene._distances.length; i++){\n        var osc = oscillators[i];\n        var gain = gains[i];\n        var d = Scene._distances[i];\n        if(d>4000){\n          // noise.connect(gain)\n          // var n = SoundUtils.createNodeFromBuffer(noise);\n          // n.connect(gain);\n          // gain.gain.value = 1/d/1000;\n          osc.frequency.value = 0;\n          // n.start();\n          gain.gain.value = .0000;\n        } else {\n          osc.frequency.value = 20000/d;\n          gain.gain.value = d/5000;\n        }\n      }\n    }\n  }\n}\n\n\nfunction startBuffer(buffer, channel){\n  var node = SoundUtils.createNodeFromBuffer(buffer);\n  node.connect(panners[channel]);\n  node.start();\n  node.onended = function(){\n    playing = false;\n  };\n}\n\nexport {playSound, playAllSounds, updatePlay, toggleContinuous}","import {clearCanvas} from './canvas'\nimport player from './player'\nimport fps from './util/fps'\nimport {checkSceneIntersections} from './intersections'\nimport Scene from './scene'\nimport {updatePlay} from './webaudio/test-sound'\n\n/**\n * Main loop that executes each frame\n * \n * @return void\n */\nfunction drawFrame(){\n  checkSceneIntersections();\n  clearCanvas();\n  Scene.render();\n  updatePlay();\n  fps.drawFPS();\n}\n\nexport default drawFrame;","import player from './player'\nimport Ray from './geometry/Ray'\nimport Point from './geometry/Point'\nimport {numberOfRays, rayAngle, rayAngles} from './config.js'\nimport Scene from './scene'\n\nvar {primaryRays} = Scene\n\nfunction shootRaysFromPlayer(){\n  Scene.primaryRays = rayAngles.map(angle => {\n    const vector = new Point(Math.cos(angle), Math.sin(angle))\n    return new Ray(player.position, vector)\n  })\n}\n\nfunction updatePrimaryRays(){\n  Scene.primaryRays.forEach(ray => \n    ray.updatePosition(player.position)\n  )\n}\n\nconsole.log('shoot-rays.js')\nshootRaysFromPlayer()\n\nexport {shootRaysFromPlayer, updatePrimaryRays}","import {getMousePositionFromEvent} from './util/browser-util.js';\nimport {near, distanceBetween} from './math/vector-math';\nimport {canvas} from './canvas';\nimport player from './player';\nimport colors from './misc/colors';\nimport {updatePrimaryRays} from './shoot-rays'\nimport Line from './geometry/Line'\nimport Circle from './geometry/Circle'\nimport Point from './geometry/Point'\nimport {playSound, playAllSounds, toggleContinuous} from './webaudio/test-sound'\n\nimport Scene from './scene'\n\nconst MOVEMENT_SPEED = 2; // pixels per frame\n\nconst keys = {\n  w: false,\n  a: false,\n  s: false,\n  d: false\n};\n\nfunction updatePlayerMovement() {\n  let dx = 0;\n  let dy = 0;\n  \n  if (keys.w) dy -= MOVEMENT_SPEED;\n  if (keys.s) dy += MOVEMENT_SPEED;\n  if (keys.a) dx -= MOVEMENT_SPEED;\n  if (keys.d) dx += MOVEMENT_SPEED;\n  \n  if (dx !== 0 || dy !== 0) {\n    player.set(player.x + dx, player.y + dy);\n    updatePrimaryRays();\n  }\n}\n\nfunction init(){\n  canvas.addEventListener('mousedown', discernEvent);\n  Mousetrap.bind([\"cmd+z\", \"ctrl+z\"], removeLast); \n  Mousetrap.bind('x', playSound);\n  Mousetrap.bind('c', playAllSounds);\n  Mousetrap.bind('v', toggleContinuous);\n  \n  // Add WASD controls with keydown/keyup\n  document.addEventListener('keydown', (e) => {\n    switch(e.key.toLowerCase()) {\n      case 'w': keys.w = true; break;\n      case 'a': keys.a = true; break;\n      case 's': keys.s = true; break;\n      case 'd': keys.d = true; break;\n    }\n  });\n  \n  document.addEventListener('keyup', (e) => {\n    switch(e.key.toLowerCase()) {\n      case 'w': keys.w = false; break;\n      case 'a': keys.a = false; break;\n      case 's': keys.s = false; break;\n      case 'd': keys.d = false; break;\n    }\n  });\n}\n\nlet undos = []\nfunction removeLast(){\n  const undo = undos.pop()\n  if (undo)\n    undo()\n};\n\nfunction discernEvent(event){\n  var mousePoint = getMousePositionFromEvent(event);\n\n  if(near(player, mousePoint, 7)){\n    dragPlayer(event);\n  } else {\n    if (event.shiftKey) {\n      startDrawing(event, 'circle')\n    } else {\n      startDrawing(event, 'line')\n    }\n  }\n};\n\n// ----- DRAGGING PLAYER -----\nfunction dragPlayer(event){\n  canvas.addEventListener('mousemove', updateDrag);\n  canvas.addEventListener('mouseup', endDrag);\n};\n\nfunction updateDrag(event){\n  var {x,y} = getMousePositionFromEvent(event);\n  player.set(x,y);\n  updatePrimaryRays();\n\n};\n\nfunction endDrag(event){\n  var {x,y} = getMousePositionFromEvent(event);\n  player.set(x,y);\n  canvas.removeEventListener('mousemove', updateDrag);\n  canvas.removeEventListener('mouseup', endDrag);\n  updatePrimaryRays();\n};\n\n\n// ----- DRAWING LINES ------\n\nconst drawingModes = {\n  line: {\n    start: (event) => {\n      const {x,y} = getMousePositionFromEvent(event);\n      Scene.lineBeingDrawn = lineBeingDrawn = new Line(x,y,x,y, colors.unfinished)\n    },\n    update: (event) => {\n      if(!Scene.lineBeingDrawn) return\n      const {x,y} = getMousePositionFromEvent(event)\n      Scene.lineBeingDrawn.setEnd(x,y)\n    },\n    finish: (event) => {\n      const {x,y} = getMousePositionFromEvent(event)\n      Scene.lineBeingDrawn.setEnd(x,y)\n      Scene.lineBeingDrawn.color = colors.line\n      Scene.lineBeingDrawn.width = 4\n      Scene.finishedLines.push(Scene.lineBeingDrawn)\n      Scene.lineBeingDrawn = null\n      undos.push(() => Scene.finishedLines.pop())\n    }\n  },\n  circle: {\n    start: (event) => {\n      const {x,y} = getMousePositionFromEvent(event)\n      Scene.circleBeingDrawn = new Circle(new Point(x,y), 0)\n    },\n    update: (event) => {\n      const mousePosition = getMousePositionFromEvent(event)\n      const radius = distanceBetween(Scene.circleBeingDrawn.center, mousePosition)\n      Scene.circleBeingDrawn.radius = radius\n    },\n    finish: (event) => {\n      const mousePosition = getMousePositionFromEvent(event)\n      const radius = distanceBetween(Scene.circleBeingDrawn.center, mousePosition)\n      Scene.circleBeingDrawn.radius = radius\n      Scene.circles.push(Scene.circleBeingDrawn) \n      Scene.circleBeingDrawn = null\n      undos.push(() => Scene.circles.pop())\n    },\n  }\n}\n\nvar lineBeingDrawn;\nvar circleBeingDrawn;\n\nfunction startDrawing(event, type){\n  const drawing = drawingModes[type]\n  drawing.start(event)\n\n  const update = drawing.update\n  const finish = (event) => {\n    drawing.finish(event)\n    canvas.removeEventListener('mousemove', update);\n    canvas.removeEventListener('mouseup', finish);\n  }\n  canvas.addEventListener('mousemove', update);\n  canvas.addEventListener('mouseup', finish);\n};\n\n\nfunction finishDrawing(type){\n  const drawing = drawingModes[type]\n  return (event) => {\n    drawing.finish(event)\n  }\n};\n\n\n\nexport {init, updatePlayerMovement};","import drawFrame from './frame'\nimport {updatePlayerMovement} from './interaction'\n\nvar recursiveAnim;\n\nfunction startAnimationLoop(){\n  var animFrame = window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame    ||\n      window.oRequestAnimationFrame      ||\n      window.msRequestAnimationFrame     ||\n      null ;\n\n  recursiveAnim = function() {\n    updatePlayerMovement();\n    drawFrame();\n    animFrame( recursiveAnim );\n  };\n  animFrame(recursiveAnim);\n  console.log(\"Starting animation.\")\n}\n\nfunction stopAnimationLoop(){\n  recursiveAnim = function(){\n    console.log(\"Stopping animation!\");\n  }\n}\n\nexport {startAnimationLoop, stopAnimationLoop};","import {startAnimationLoop} from './animation'\nimport * as interaction from './interaction'\nimport player from './player'\nimport {panners} from './webaudio/endpoints'\n\nfunction init(){\n  interaction.init();\n  startAnimationLoop();\n}\n\ninit();"],"names":["$","expr","container","viewport","a","getMousePositionFromEvent","event","currentX","currentY","initCanvas","canvas","setCanvasSize","ctx","size","clearCanvas","colors","Point","x","y","p","Player","initPlayer","width","height","player","fps","d","currentTime","result","Scene","drawRays","drawFinishedLines","drawHiddenIntersections","drawIntersections","drawLineBeingDrawn","circle","line","ray","point","near","p1","p2","dist","dotProduct","b","PI2","vectorToAngle","asin","normalize","v","distanceBetween","reflectionVector","v1","v2","angle1","angle2","reflectedAngle","reflectOffCircle","intersectionPoint","normal","normalLength","dot","subtract","Line","x1","y1","color","Circle","center","radius","numberOfRays","maxChildren","rayAngle","rayAngles","i","Ray","start","vector","config.maxChildren","touchedGeometry","length","geometry","reflectedVector","intersectionsChecked","rayLineIntersection","e","f","q","h","rayCircleIntersection","centerToRay","c","discriminant","t1","t2","t","roughDistance","rayIntersectReducer","shortestDistance","nearestIntersect","nearestIntersectGeometry","intersectable","intersectPoint","distance","rayMapper","rayMeta","forEachMappedRay","nearestIntersectLine","checkSceneIntersections","AudioContext","audioCtx","compressor","masterChannel","createPanner","angle","panner","panners","createPanners","createNodeFromBuffer","buffer","bfSource","createNoise","amp","bf","data","createSine","noise","SoundUtils.createNoise","SoundUtils.createSine","playing","playSound","startBuffer","sounds","playAllSounds","soundsPlaying","lastPosition","oscillators","gains","toggleContinuous","osc","updatePlay","gain","channel","node","SoundUtils.createNodeFromBuffer","drawFrame","primaryRays","shootRaysFromPlayer","updatePrimaryRays","MOVEMENT_SPEED","keys","updatePlayerMovement","dx","dy","init","discernEvent","removeLast","undos","undo","mousePoint","dragPlayer","startDrawing","updateDrag","endDrag","drawingModes","mousePosition","type","drawing","update","finish","recursiveAnim","startAnimationLoop","animFrame","interaction.init"],"mappings":"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"}